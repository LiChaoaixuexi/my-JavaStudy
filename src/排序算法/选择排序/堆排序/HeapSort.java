package 排序算法.选择排序.堆排序;

/**
 * 1.堆排序：
 *     堆排序是一种基于 “堆 ” 数据结构的高效排序算法，由计算机科学家 J. W. J. Williams 于 1964 年提出。
 * 它的核心思想是：利用堆的特性（大顶堆 / 小顶堆），反复提取堆顶元素（最大值 / 最小值），并调整剩余元素为新
 * 的堆，最终得到有序序列。
 * 2.复杂度分析
 *    ①时间复杂度：
 *       构建大顶堆：O (n)（推导较复杂，可简单理解为对每个非叶子节点调整，总操作数约 n）。
 *       提取堆顶并调整：共 n-1 次，每次调整复杂度 O (log n)，总 O (n log n)。
 *       整体：O(n log n)（最好、最坏、平均情况均为此值，稳定性强）。
 *    ②空间复杂度：O(1)（仅用常数级额外空间，原地排序）。
 *    ③稳定性：不稳定（交换堆顶和末尾元素时，可能改变相同元素的相对位置）
 * 3.记忆技巧
 *    (1) 堆排序 = 构建大顶堆 + 反复 “取顶换尾 + 调堆”。
 *    (2) 核心函数 adjustHeap：确保以某个节点为根的子树是大顶堆（“下沉” 操作）。
 *    (3) 构建堆时从最后一个非叶子节点（n/2 - 1）开始，自底向上调整。
 */
public class HeapSort {
}
